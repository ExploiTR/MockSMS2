package app.exploitr.mocksms2.utils;

import android.content.ContentValues;
import android.content.Context;
import android.net.Uri;
import android.os.Build;
import android.provider.Telephony;

import java.util.HashMap;

public class SMSParameterTest {

    private static boolean trySave(Context context, Uri message_mode, ContentValues contentValues) {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
            contentValues.put(Telephony.Sms.THREAD_ID, Telephony.Threads.getOrCreateThreadId(context, contentValues.getAsString(Telephony.Sms.ADDRESS)));

        try {
            Uri insertedUri = context.getContentResolver().insert(message_mode, contentValues);
            return insertedUri != null;
        } catch (Exception e) {
            //noinspection CallToPrintStackTrace
            e.printStackTrace();
            return false;
        }
    }

    /*
        private static boolean saveSMSInternalLevel1(Context context, Uri message_mode, String address, String message) {
            ContentValues c_val = new ContentValues();
            c_val.put(Telephony.Sms.ADDRESS, address);
            c_val.put(Telephony.Sms.BODY, message);
            return trySave(context, message_mode, c_val);
        }

        private static boolean saveSMSInternalLevel2(Context context, Uri message_mode, String address, String message, long person) {
            ContentValues c_val = new ContentValues();
            c_val.put(Telephony.Sms.ADDRESS, address);
            c_val.put(Telephony.Sms.BODY, message);
            //  c_val.put(Telephony.Sms.PERSON, integer/long);
            return trySave(context, message_mode, c_val);
        }

        private static boolean saveSMSInternalLevel3(Context context, Uri message_mode, String address, String message, long received_time) {
            ContentValues c_val = new ContentValues();
            c_val.put(Telephony.Sms.ADDRESS, address);
            c_val.put(Telephony.Sms.BODY, message);
            c_val.put(Telephony.Sms.DATE, received_time);
            return trySave(context, message_mode, c_val);
        }

        private static boolean saveSMSInternalLevel4(Context context, Uri message_mode, String address, String message, long creation_time) {
            ContentValues c_val = new ContentValues();
            c_val.put(Telephony.Sms.ADDRESS, address);
            c_val.put(Telephony.Sms.BODY, message);
            c_val.put(Telephony.Sms.DATE_SENT, creation_time);
            return trySave(context, message_mode, c_val);
        }

        private static boolean saveSMSInternalLevel5(Context context, Uri message_mode, String address, String message, boolean is_read) {
            ContentValues c_val = new ContentValues();
            c_val.put(Telephony.Sms.ADDRESS, address);
            c_val.put(Telephony.Sms.BODY, message);
            c_val.put(Telephony.Sms.READ, is_read);
            return trySave(context, message_mode, c_val);
        }

        private static boolean saveSMSInternalLevel6(Context context, Uri message_mode, String address, String message, int status) {
            ContentValues c_val = new ContentValues();
            c_val.put(Telephony.Sms.ADDRESS, address);
            c_val.put(Telephony.Sms.BODY, message);
            c_val.put(Telephony.Sms.STATUS, status);
            return trySave(context, message_mode, c_val);
        }

        private static boolean saveSMSInternalLevel7(Context context, Uri message_mode, String address, String message, int message_type) {
            ContentValues c_val = new ContentValues();
            c_val.put(Telephony.Sms.ADDRESS, address);
            c_val.put(Telephony.Sms.BODY, message);
            c_val.put(Telephony.Sms.TYPE, message_type);
            return trySave(context, message_mode, c_val);
        }

        private static boolean saveSMSInternalLevel8(Context context, Uri message_mode, String address, String message,
                                                     boolean is_reply_path_present) {
            ContentValues c_val = new ContentValues();
            c_val.put(Telephony.Sms.ADDRESS, address);
            c_val.put(Telephony.Sms.BODY, message);
            c_val.put(Telephony.Sms.REPLY_PATH_PRESENT, is_reply_path_present);
            return trySave(context, message_mode, c_val);
        }

        private static boolean saveSMSInternalLevel9(Context context, Uri message_mode, String address, String message, String service_center) {
            ContentValues c_val = new ContentValues();
            c_val.put(Telephony.Sms.ADDRESS, address);
            c_val.put(Telephony.Sms.BODY, message);
            c_val.put(Telephony.Sms.SERVICE_CENTER, service_center);
            return trySave(context, message_mode, c_val);
        }

        private static boolean saveSMSInternalLevel10(Context context, Uri message_mode, String address, String message, int sim_index) {
            ContentValues c_val = new ContentValues();
            c_val.put(Telephony.Sms.ADDRESS, address);
            c_val.put(Telephony.Sms.BODY, message);
            c_val.put(Telephony.Sms.SUBSCRIPTION_ID, sim_index);
            return trySave(context, message_mode, c_val);
        }

        private static boolean saveSMSInternalLevel10(Context context, Uri message_mode, String address, String message, boolean is_seen) {
            ContentValues c_val = new ContentValues();
            c_val.put(Telephony.Sms.ADDRESS, address);
            c_val.put(Telephony.Sms.BODY, message);
            c_val.put(Telephony.Sms.SEEN, is_seen);
            return trySave(context, message_mode, c_val);
        }

        private static boolean saveSMSInternalLevel11(Context context, Uri message_mode, String address, String message) {
            ContentValues c_val = new ContentValues();
            c_val.put(Telephony.Sms.ADDRESS, address);
            c_val.put(Telephony.Sms.BODY, message);
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
                c_val.put(Telephony.Sms.THREAD_ID, Telephony.Threads.getOrCreateThreadId(context, address));
            return trySave(context, message_mode, c_val);
        }
    */
    private static <K, V> boolean saveSMSWithParameter(Context context, Uri message_mode, String address, String message, K parameter, V value) {
        ContentValues c_val = new ContentValues();
        c_val.put(Telephony.Sms.ADDRESS, address);
        c_val.put(Telephony.Sms.BODY, message);
        c_val.put(String.valueOf(parameter), String.valueOf(value));
        return trySave(context, message_mode, c_val);
    }

    public static HashMap<Integer, Boolean> performInBuiltPatternTest(Context context, Uri message_mode, String address, long creation_time, long received_time, boolean is_read, int sim_index, boolean is_seen,
                                                                      int message_type, boolean is_reply_path_present, String service_center, int status) {
        HashMap<Integer, Boolean> resultMap = new HashMap<>();

        resultMap.put(1, saveSMSWithParameter(context, message_mode, address, "Test1", Telephony.Sms.DATE_SENT, creation_time));
        resultMap.put(2, saveSMSWithParameter(context, message_mode, address, "Test2", Telephony.Sms.DATE, received_time));
        resultMap.put(3, saveSMSWithParameter(context, message_mode, address, "Test3", Telephony.Sms.READ, is_read));
        resultMap.put(4, saveSMSWithParameter(context, message_mode, address, "Test4", Telephony.Sms.SUBSCRIPTION_ID, sim_index));
        resultMap.put(5, saveSMSWithParameter(context, message_mode, address, "Test5", Telephony.Sms.SEEN, is_seen));
        resultMap.put(6, saveSMSWithParameter(context, message_mode, address, "Test6", Telephony.Sms.TYPE, message_type));
        resultMap.put(7, saveSMSWithParameter(context, message_mode, address, "Test7", Telephony.Sms.REPLY_PATH_PRESENT, is_reply_path_present));
        resultMap.put(8, saveSMSWithParameter(context, message_mode, address, "Test8", Telephony.Sms.SERVICE_CENTER, service_center));
        resultMap.put(9, saveSMSWithParameter(context, message_mode, address, "Test9", Telephony.Sms.STATUS, status));

        return resultMap;
    }
}
