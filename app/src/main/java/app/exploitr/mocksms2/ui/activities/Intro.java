package app.exploitr.mocksms2.ui.activities;

import android.Manifest;
import android.os.Build;
import android.os.Bundle;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.RequiresApi;
import androidx.fragment.app.Fragment;

import com.github.appintro.AppIntro;
import com.github.appintro.AppIntroFragment;
import com.google.android.material.snackbar.Snackbar;


public class Intro extends AppIntro {

    @RequiresApi(api = Build.VERSION_CODES.P)
    String[] permissions = {
            Manifest.permission.FOREGROUND_SERVICE,
            Manifest.permission.READ_CONTACTS,
            Manifest.permission.READ_PHONE_STATE,
            Manifest.permission.RECEIVE_SMS,
            Manifest.permission.READ_SMS,
            Manifest.permission.RECEIVE_MMS,
            Manifest.permission.RECEIVE_WAP_PUSH,
            Manifest.permission.VIBRATE,
            "android.permission.WRITE_SMS"
    };

    String[] permissions22 = {
            Manifest.permission.READ_CONTACTS,
            Manifest.permission.READ_PHONE_STATE,
            Manifest.permission.RECEIVE_SMS,
            Manifest.permission.READ_SMS,
            Manifest.permission.RECEIVE_MMS,
            Manifest.permission.RECEIVE_WAP_PUSH,
            Manifest.permission.VIBRATE,
            "android.permission.WRITE_SMS"
    };

    Fragment welcomeSlide;
    Fragment permissionSlide;
    Fragment completeSlide;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        welcomeSlide = AppIntroFragment.createInstance("Welcome to MockSMS2!",
                "The same old MockSMS, but where everything looks good!"); //todo logo and background color
        permissionSlide = AppIntroFragment.createInstance("Can't work without permissions!",
                "Permission desc"); //todo update permission desc
        completeSlide = AppIntroFragment.createInstance("Let's GO!",
                "MockSMS got everything it needs! You're good to go!"); //todo custom stuff?

        addSlide(welcomeSlide);
        addSlide(permissionSlide);
        addSlide(completeSlide);

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {
            askForPermissions(
                    permissions,
                    2,
                    true
            );
        } else {
            askForPermissions(
                    permissions22,
                    2,
                    true
            );
        }
    }

    @Override
    public void onSkipPressed(Fragment currentFragment) {
        super.onSkipPressed(currentFragment);
        if (currentFragment == permissionSlide) {
            if (currentFragment.getView() == null) {
                Toast.makeText(this, "Please read the permission list and why they're required then click next!", Toast.LENGTH_LONG).show();
                return;
            }
            Snackbar bar = Snackbar.make(currentFragment.getView(), "Please read the permission list and why they're required then click next or swipe right!", Snackbar.LENGTH_INDEFINITE);
            bar.setAction("Okay!", v -> bar.dismiss());
            bar.show();
        } else
            goToNextSlide();
    }

    @Override
    public void onDonePressed(Fragment currentFragment) {
        super.onDonePressed(currentFragment);
        // Decide what to do when the user clicks on "Done"
        finish();
        //todo after splash startActivity(new Intent(this,MainActivity.class));
    }

    @Override
    public void onUserDeniedPermission(@NonNull String permissionName) {
        Toast.makeText(this, "Not possible to work without permissions!", Toast.LENGTH_SHORT).show();
        moveTaskToBack(true);
    }

    @Override
    public void onUserDisabledPermission(@NonNull String permissionName) {
        Toast.makeText(this, "Not possible to work without permissions! Enable from settings.", Toast.LENGTH_SHORT).show();
        finishAndRemoveTask();
        moveTaskToBack(true);
    }
}
