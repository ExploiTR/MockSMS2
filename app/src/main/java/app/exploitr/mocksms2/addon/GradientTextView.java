package app.exploitr.mocksms2.addon;

import android.animation.ValueAnimator;
import android.content.Context;
import android.graphics.Canvas;
import android.graphics.LinearGradient;
import android.graphics.Matrix;
import android.graphics.Paint;
import android.graphics.Shader;
import android.util.AttributeSet;
import android.view.animation.LinearInterpolator;

import androidx.appcompat.widget.AppCompatTextView;

import app.exploitr.mocksms2.R;

public class GradientTextView extends AppCompatTextView {

    private LinearGradient linearGradient;
    private Matrix gradientMatrix;
    private Paint paint;
    private float translateX;

    public GradientTextView(Context context) {
        super(context);
        init();
    }

    public GradientTextView(Context context, AttributeSet attrs) {
        super(context, attrs);
        init();
    }

    public GradientTextView(Context context, AttributeSet attrs, int defStyleAttr) {
        super(context, attrs, defStyleAttr);
        init();
    }

    private void init() {
        paint = getPaint();
        gradientMatrix = new Matrix();

        ValueAnimator animator = ValueAnimator.ofFloat(0.0f, 2.0f);
        animator.setRepeatCount(ValueAnimator.INFINITE);
        animator.setInterpolator(new LinearInterpolator());
        animator.setDuration(2500L);
        animator.addUpdateListener(animation -> {
            translateX = getWidth() * ((Float) animation.getAnimatedValue());
            invalidate();
        });
        animator.start();
    }

    @Override
    protected void onSizeChanged(int w, int h, int old_w, int old_h) {
        super.onSizeChanged(w, h, old_w, old_h);
        linearGradient = new LinearGradient(0, 0, w, h,
                new int[]{getResources().getColor(R.color.primary_color)
                        , getResources().getColor(R.color.date_color_start)},
                null, Shader.TileMode.MIRROR);
        paint.setShader(linearGradient);
    }

    @Override
    protected void onDraw(Canvas canvas) {
        if (gradientMatrix != null) {
            gradientMatrix.setTranslate(translateX, 0);
            linearGradient.setLocalMatrix(gradientMatrix);
        }
        super.onDraw(canvas);
    }
}
